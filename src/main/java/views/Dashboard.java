
package views;

import config.Variables;
import config.Dialogs;
import com.formdev.flatlaf.*;
import java.awt.Dimension;
import java.util.*;
import javax.swing.*;
import database.*;
import java.awt.Image;
import java.io.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author NUN
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Account
     */
    public Dashboard() {
        initComponents();
        Image icon = Variables.icon;
        this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        allTabs = new javax.swing.JTabbedPane();
        panelTab = new javax.swing.JPanel();
        welcomeMessage = new javax.swing.JLabel();
        calendar = new com.toedter.calendar.JCalendar();
        accountTab = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nicknameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        repasswordField = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        oldPasswordField = new javax.swing.JPasswordField();
        updateButton = new javax.swing.JButton();
        oldpasswordshowhide = new javax.swing.JRadioButton();
        passwordshowhide = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        permissionText = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        createdDateText = new javax.swing.JLabel();
        mainadminallowedpanel = new javax.swing.JPanel();
        createAccountButton = new javax.swing.JButton();
        accountsButton = new javax.swing.JButton();
        inventoryTab = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        inventorySearchBar = new javax.swing.JTextField();
        inventorySearchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox<>();
        deviceComboBox = new javax.swing.JComboBox<>();
        inventoryStatusComboBox = new javax.swing.JComboBox<>();
        assignedProfileComboBox = new javax.swing.JComboBox<>();
        warrantyComboBox = new javax.swing.JComboBox<>();
        remainingWarrantyComboBox = new javax.swing.JComboBox<>();
        profilesTab = new javax.swing.JPanel();
        profileSearchBar = new javax.swing.JTextField();
        profileSearchButton = new javax.swing.JButton();
        jScrollPane19 = new javax.swing.JScrollPane();
        profilesTable = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        profileStatusComboBox = new javax.swing.JComboBox<>();
        categoryTab = new javax.swing.JPanel();
        categoriesSearchBar = new javax.swing.JTextField();
        categoriesSearchButton = new javax.swing.JButton();
        jScrollPane20 = new javax.swing.JScrollPane();
        categoriesTable = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        categoriesPropertyNumberComboBox = new javax.swing.JComboBox<>();
        addDeviceTab = new javax.swing.JPanel();
        adddevicepanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        newDeviceCategory = new javax.swing.JComboBox<>();
        newDeviceName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        property1 = new javax.swing.JTextField();
        property2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        property6 = new javax.swing.JTextField();
        property7 = new javax.swing.JTextField();
        property8 = new javax.swing.JTextField();
        property9 = new javax.swing.JTextField();
        property3 = new javax.swing.JTextField();
        property4 = new javax.swing.JTextField();
        property5 = new javax.swing.JTextField();
        property10 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        newDeviceAmount = new javax.swing.JSpinner();
        jLabel28 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        newDeviceSerialNum6 = new javax.swing.JTextField();
        newDeviceSerialNum7 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        newDeviceSerialNum9 = new javax.swing.JTextField();
        newDeviceSerialNum8 = new javax.swing.JTextField();
        newDeviceSerialNum2 = new javax.swing.JTextField();
        newDeviceSerialNum1 = new javax.swing.JTextField();
        newDeviceSerialNum4 = new javax.swing.JTextField();
        newDeviceSerialNum3 = new javax.swing.JTextField();
        newDeviceSerialNum10 = new javax.swing.JTextField();
        newDeviceSerialNum5 = new javax.swing.JTextField();
        createDeviceButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        newDeviceWarrantyDateCheckBox = new javax.swing.JCheckBox();
        newDeviceWarrantyCheckBox = new javax.swing.JCheckBox();
        newDeviceWarrantyType = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        newDeviceWarrantyDate = new org.jdesktop.swingx.JXDatePicker();
        newDeviceWarranty = new javax.swing.JSpinner();
        noperm = new javax.swing.JLabel();
        devicesLogTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        devicesLogTable = new javax.swing.JTable();
        profileLogTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        profilesLogTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exportButton = new javax.swing.JMenuItem();
        uploadCSVButton = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        preferences = new javax.swing.JMenu();
        darkTheme = new javax.swing.JCheckBoxMenuItem();
        addMenu = new javax.swing.JMenu();
        addDeviceMenuButton = new javax.swing.JMenuItem();
        addCategoryMenuButton = new javax.swing.JMenuItem();
        addProfileMenuButton = new javax.swing.JMenuItem();
        createAccountMenuButton = new javax.swing.JMenuItem();
        settings = new javax.swing.JMenu();
        databaseSettings = new javax.swing.JMenuItem();
        mainAdminMail = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        aboutButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EYS");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        allTabs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        allTabs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                allTabsFocusGained(evt);
            }
        });
        allTabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allTabsMouseClicked(evt);
            }
        });
        allTabs.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                allTabsComponentShown(evt);
            }
        });

        panelTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelTabComponentShown(evt);
            }
        });

        welcomeMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeMessage.setText("Ho≈ügeldin ");

        javax.swing.GroupLayout panelTabLayout = new javax.swing.GroupLayout(panelTab);
        panelTab.setLayout(panelTabLayout);
        panelTabLayout.setHorizontalGroup(
            panelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabLayout.createSequentialGroup()
                .addGroup(panelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTabLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelTabLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(welcomeMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(243, Short.MAX_VALUE))
        );
        panelTabLayout.setVerticalGroup(
            panelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(welcomeMessage)
                .addGap(18, 18, 18)
                .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        allTabs.addTab("Panel", panelTab);

        accountTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                accountTabComponentShown(evt);
            }
        });

        jLabel1.setText("Kullanƒ±cƒ± Adƒ±");

        nicknameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nicknameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicknameFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("≈ûifre");

        passwordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setText("Yeni ≈ûifre Tekrar");

        repasswordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setText("Eski ≈ûifre");

        oldPasswordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        updateButton.setText("G√ºncelle");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        oldpasswordshowhide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldpasswordshowhideActionPerformed(evt);
            }
        });

        passwordshowhide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordshowhideActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oldPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nicknameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(oldpasswordshowhide, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordshowhide))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nicknameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordshowhide))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(repasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(oldPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(oldpasswordshowhide))
                .addGap(18, 18, 18)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel5.setText("Yetki:");

        permissionText.setText("<permission>");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Hesap Olu≈üturulma Tarihi:");

        createdDateText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createdDateText.setText("XX/XX/XXXX");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(permissionText))
                    .addComponent(createdDateText))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(permissionText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createdDateText)
                .addGap(18, 18, 18))
        );

        createAccountButton.setText("Hesap Olu≈ütur");
        createAccountButton.setEnabled(false);
        createAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountButtonActionPerformed(evt);
            }
        });

        accountsButton.setText("Hesaplar");
        accountsButton.setEnabled(false);
        accountsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainadminallowedpanelLayout = new javax.swing.GroupLayout(mainadminallowedpanel);
        mainadminallowedpanel.setLayout(mainadminallowedpanelLayout);
        mainadminallowedpanelLayout.setHorizontalGroup(
            mainadminallowedpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainadminallowedpanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainadminallowedpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(createAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountsButton))
                .addGap(52, 52, 52))
        );
        mainadminallowedpanelLayout.setVerticalGroup(
            mainadminallowedpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainadminallowedpanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(accountsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout accountTabLayout = new javax.swing.GroupLayout(accountTab);
        accountTab.setLayout(accountTabLayout);
        accountTabLayout.setHorizontalGroup(
            accountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountTabLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(accountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(mainadminallowedpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(199, Short.MAX_VALUE))
        );
        accountTabLayout.setVerticalGroup(
            accountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(accountTabLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mainadminallowedpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(264, Short.MAX_VALUE))
        );

        allTabs.addTab("Hesap", accountTab);

        inventoryTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                inventoryTabComponentShown(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Kategori:");

        inventorySearchButton.setText("Ara");
        inventorySearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventorySearchButtonActionPerformed(evt);
            }
        });

        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Kategori", "Cihaz", "Durumu", "Atanan Profil", "Garanti Biti≈ü Tarihi", "Garanti Kalan S√ºre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                inventoryTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(inventoryTable);
        if (inventoryTable.getColumnModel().getColumnCount() > 0) {
            inventoryTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            inventoryTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Cihaz:");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Durumu:");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Atanan Profil:");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Garanti Biti≈ü Tarihi:");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("Garanti Kalan S√ºre:");

        categoryComboBox.setMaximumRowCount(20);

        deviceComboBox.setMaximumRowCount(20);

        inventoryStatusComboBox.setMaximumRowCount(20);

        assignedProfileComboBox.setMaximumRowCount(20);

        warrantyComboBox.setMaximumRowCount(20);

        remainingWarrantyComboBox.setMaximumRowCount(20);

        javax.swing.GroupLayout inventoryTabLayout = new javax.swing.GroupLayout(inventoryTab);
        inventoryTab.setLayout(inventoryTabLayout);
        inventoryTabLayout.setHorizontalGroup(
            inventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deviceComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inventoryStatusComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(assignedProfileComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(categoryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(warrantyComboBox, 0, 101, Short.MAX_VALUE)
                    .addComponent(remainingWarrantyComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inventoryTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(inventoryTabLayout.createSequentialGroup()
                        .addComponent(inventorySearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inventorySearchButton)
                        .addGap(113, 409, Short.MAX_VALUE))))
        );
        inventoryTabLayout.setVerticalGroup(
            inventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventorySearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inventorySearchButton))
                .addGroup(inventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inventoryTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inventoryTabLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inventoryStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(assignedProfileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(warrantyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remainingWarrantyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        allTabs.addTab("Envanter", inventoryTab);

        profilesTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                profilesTabComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                profilesTabComponentShown(evt);
            }
        });

        profileSearchButton.setText("Ara");
        profileSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileSearchButtonActionPerformed(evt);
            }
        });

        profilesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "ƒ∞sim", "Cihaz Sayƒ±sƒ±", "Durumu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        profilesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                profilesTableMouseReleased(evt);
            }
        });
        jScrollPane19.setViewportView(profilesTable);
        if (profilesTable.getColumnModel().getColumnCount() > 0) {
            profilesTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Durumu:");

        profileStatusComboBox.setMaximumRowCount(20);

        javax.swing.GroupLayout profilesTabLayout = new javax.swing.GroupLayout(profilesTab);
        profilesTab.setLayout(profilesTabLayout);
        profilesTabLayout.setHorizontalGroup(
            profilesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(profileStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profilesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profilesTabLayout.createSequentialGroup()
                        .addComponent(profileSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(profileSearchButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE))
                .addContainerGap())
        );
        profilesTabLayout.setVerticalGroup(
            profilesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profileSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profileSearchButton))
                .addGroup(profilesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profilesTabLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(profilesTabLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(profileStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        allTabs.addTab("Profiller", profilesTab);

        categoryTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                categoryTabComponentShown(evt);
            }
        });

        categoriesSearchButton.setText("Ara");
        categoriesSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesSearchButtonActionPerformed(evt);
            }
        });

        categoriesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "ƒ∞sim", "√ñzellik Sayƒ±sƒ±", "Kayƒ±tlƒ± Cihaz Sayƒ±sƒ±"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        categoriesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                categoriesTableMouseReleased(evt);
            }
        });
        jScrollPane20.setViewportView(categoriesTable);
        if (categoriesTable.getColumnModel().getColumnCount() > 0) {
            categoriesTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel26.setText("√ñzellik Sayƒ±sƒ±:");

        categoriesPropertyNumberComboBox.setMaximumRowCount(20);

        javax.swing.GroupLayout categoryTabLayout = new javax.swing.GroupLayout(categoryTab);
        categoryTab.setLayout(categoryTabLayout);
        categoryTabLayout.setHorizontalGroup(
            categoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, categoryTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(categoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoriesPropertyNumberComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(categoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(categoryTabLayout.createSequentialGroup()
                        .addComponent(categoriesSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoriesSearchButton))
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        categoryTabLayout.setVerticalGroup(
            categoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(categoryTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(categoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoriesSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoriesSearchButton))
                .addGroup(categoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(categoryTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(categoryTabLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoriesPropertyNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        allTabs.addTab("Kategoriler", categoryTab);

        addDeviceTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                addDeviceTabComponentShown(evt);
            }
        });
        addDeviceTab.setLayout(null);

        adddevicepanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                adddevicepanelComponentShown(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Kategori:");

        newDeviceCategory.setMaximumRowCount(20);
        newDeviceCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceCategoryActionPerformed(evt);
            }
        });

        newDeviceName.setToolTipText("Cihaz ƒ∞smi");
        newDeviceName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceNameActionPerformed(evt);
            }
        });

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Cihaz ƒ∞smi:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(newDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newDeviceCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(newDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(newDeviceCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        property1.setToolTipText("");
        property1.setEnabled(false);
        property1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property1ActionPerformed(evt);
            }
        });

        property2.setToolTipText("");
        property2.setEnabled(false);
        property2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property2ActionPerformed(evt);
            }
        });

        jLabel19.setText("1.");

        jLabel20.setText("2.");

        jLabel21.setText("3.");

        jLabel22.setText("4.");

        jLabel23.setText("5.");

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("√ñzellikler");

        jLabel33.setText("6.");

        jLabel34.setText("7.");

        jLabel35.setText("8.");

        jLabel36.setText("9.");

        jLabel37.setText("10.");

        property6.setToolTipText("Cihaz ƒ∞smi");
        property6.setEnabled(false);
        property6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property6ActionPerformed(evt);
            }
        });

        property7.setToolTipText("Cihaz ƒ∞smi");
        property7.setEnabled(false);
        property7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property7ActionPerformed(evt);
            }
        });

        property8.setToolTipText("");
        property8.setEnabled(false);
        property8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property8ActionPerformed(evt);
            }
        });

        property9.setToolTipText("");
        property9.setEnabled(false);
        property9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property9ActionPerformed(evt);
            }
        });

        property3.setToolTipText("");
        property3.setEnabled(false);
        property3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property3ActionPerformed(evt);
            }
        });

        property4.setToolTipText("");
        property4.setEnabled(false);
        property4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property4ActionPerformed(evt);
            }
        });

        property5.setToolTipText("");
        property5.setEnabled(false);
        property5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property5ActionPerformed(evt);
            }
        });

        property10.setToolTipText("");
        property10.setEnabled(false);
        property10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                property10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(property10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel32)
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(property1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(property6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(property2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(property7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(property3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(property8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(property4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(property9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(property5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(property10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        newDeviceAmount.setName(""); // NOI18N
        newDeviceAmount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                newDeviceAmountStateChanged(evt);
            }
        });

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Cihaz Adedi:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(newDeviceAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(newDeviceAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jLabel44.setText("6.");

        jLabel45.setText("7.");

        jLabel46.setText("8.");

        jLabel47.setText("9.");

        jLabel48.setText("10.");

        newDeviceSerialNum6.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum6.setEnabled(false);
        newDeviceSerialNum6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum6ActionPerformed(evt);
            }
        });

        newDeviceSerialNum7.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum7.setEnabled(false);
        newDeviceSerialNum7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum7ActionPerformed(evt);
            }
        });

        jLabel49.setText("1.");

        jLabel50.setText("2.");

        jLabel51.setText("3.");

        jLabel52.setText("4.");

        jLabel53.setText("5.");

        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setText("Seri Numaralarƒ±");

        newDeviceSerialNum9.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum9.setEnabled(false);
        newDeviceSerialNum9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum9ActionPerformed(evt);
            }
        });

        newDeviceSerialNum8.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum8.setEnabled(false);
        newDeviceSerialNum8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum8ActionPerformed(evt);
            }
        });

        newDeviceSerialNum2.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum2.setEnabled(false);
        newDeviceSerialNum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum2ActionPerformed(evt);
            }
        });

        newDeviceSerialNum1.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum1.setEnabled(false);
        newDeviceSerialNum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum1ActionPerformed(evt);
            }
        });

        newDeviceSerialNum4.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum4.setEnabled(false);
        newDeviceSerialNum4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum4ActionPerformed(evt);
            }
        });

        newDeviceSerialNum3.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum3.setEnabled(false);
        newDeviceSerialNum3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum3ActionPerformed(evt);
            }
        });

        newDeviceSerialNum10.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum10.setEnabled(false);
        newDeviceSerialNum10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum10ActionPerformed(evt);
            }
        });

        newDeviceSerialNum5.setToolTipText("Cihaz ƒ∞smi");
        newDeviceSerialNum5.setEnabled(false);
        newDeviceSerialNum5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceSerialNum5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newDeviceSerialNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(newDeviceSerialNum10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel54)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49)
                    .addComponent(newDeviceSerialNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(newDeviceSerialNum6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel50)
                    .addComponent(newDeviceSerialNum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(newDeviceSerialNum7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addComponent(newDeviceSerialNum3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46)
                    .addComponent(newDeviceSerialNum8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel52)
                    .addComponent(newDeviceSerialNum4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47)
                    .addComponent(newDeviceSerialNum9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel53)
                    .addComponent(newDeviceSerialNum5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48)
                    .addComponent(newDeviceSerialNum10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        createDeviceButton.setText("Olu≈ütur");
        createDeviceButton.setEnabled(false);
        createDeviceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDeviceButtonActionPerformed(evt);
            }
        });

        newDeviceWarrantyDateCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceWarrantyDateCheckBoxActionPerformed(evt);
            }
        });

        newDeviceWarrantyCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceWarrantyCheckBoxActionPerformed(evt);
            }
        });

        newDeviceWarrantyType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "G√ºn", "Ay", "Yƒ±l" }));
        newDeviceWarrantyType.setToolTipText("Garanti Tarih T√ºr√º");
        newDeviceWarrantyType.setEnabled(false);
        newDeviceWarrantyType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceWarrantyTypeActionPerformed(evt);
            }
        });

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Garanti Bilgileri");

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Tarih T√ºr√º:");

        newDeviceWarrantyDate.setEnabled(false);
        newDeviceWarrantyDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDeviceWarrantyDateActionPerformed(evt);
            }
        });

        newDeviceWarranty.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        newDeviceWarranty.setEnabled(false);
        newDeviceWarranty.setName(""); // NOI18N
        newDeviceWarranty.setNextFocusableComponent(newDeviceWarrantyType);
        newDeviceWarranty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                newDeviceWarrantyStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(newDeviceWarrantyType, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newDeviceWarrantyCheckBox, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newDeviceWarrantyDateCheckBox))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newDeviceWarrantyDate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newDeviceWarranty))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel25)
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newDeviceWarrantyDateCheckBox)
                    .addComponent(newDeviceWarrantyDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newDeviceWarrantyCheckBox)
                    .addComponent(newDeviceWarranty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(newDeviceWarrantyType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout adddevicepanelLayout = new javax.swing.GroupLayout(adddevicepanel);
        adddevicepanel.setLayout(adddevicepanelLayout);
        adddevicepanelLayout.setHorizontalGroup(
            adddevicepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adddevicepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adddevicepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(adddevicepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adddevicepanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(adddevicepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(adddevicepanelLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(adddevicepanelLayout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(createDeviceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        adddevicepanelLayout.setVerticalGroup(
            adddevicepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adddevicepanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(adddevicepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adddevicepanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adddevicepanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adddevicepanelLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(createDeviceButton)))
                .addGap(8, 8, 8))
        );

        addDeviceTab.add(adddevicepanel);
        adddevicepanel.setBounds(0, 0, 730, 280);

        noperm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noperm.setText("Bu sayfayƒ± g√∂r√ºnt√ºlemek i√ßin izniniz yok.");
        addDeviceTab.add(noperm);
        noperm.setBounds(230, 130, 260, 16);

        allTabs.addTab("Cihaz Ekle", addDeviceTab);

        devicesLogTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                devicesLogTabComponentShown(evt);
            }
        });

        devicesLogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cihaz", "ƒ∞≈ülemler", "Parametre", "Admin", "Saat", "Tarih"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        devicesLogTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(devicesLogTable);
        devicesLogTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout devicesLogTabLayout = new javax.swing.GroupLayout(devicesLogTab);
        devicesLogTab.setLayout(devicesLogTabLayout);
        devicesLogTabLayout.setHorizontalGroup(
            devicesLogTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, devicesLogTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addContainerGap())
        );
        devicesLogTabLayout.setVerticalGroup(
            devicesLogTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, devicesLogTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addContainerGap())
        );

        allTabs.addTab("Cihaz Ge√ßmi≈üi", devicesLogTab);

        profileLogTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                profileLogTabComponentShown(evt);
            }
        });

        profilesLogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Profil", "ƒ∞≈ülemler", "Parametre", "Admin", "Saat", "Tarih"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        profilesLogTable.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(profilesLogTable);
        profilesLogTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout profileLogTabLayout = new javax.swing.GroupLayout(profileLogTab);
        profileLogTab.setLayout(profileLogTabLayout);
        profileLogTabLayout.setHorizontalGroup(
            profileLogTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profileLogTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addContainerGap())
        );
        profileLogTabLayout.setVerticalGroup(
            profileLogTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profileLogTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addContainerGap())
        );

        allTabs.addTab("Profil Ge√ßmi≈üi", profileLogTab);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addComponent(allTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 288, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addComponent(allTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        fileMenu.setText("Dosya");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        exportButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exportButton.setText("Dƒ±≈üarƒ± Aktar");
        exportButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                exportButtonMouseDragged(evt);
            }
        });
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });
        fileMenu.add(exportButton);

        uploadCSVButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        uploadCSVButton.setText("CSV Y√ºkle");
        uploadCSVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadCSVButtonActionPerformed(evt);
            }
        });
        fileMenu.add(uploadCSVButton);
        fileMenu.add(jSeparator1);

        preferences.setText("Tercihler");

        darkTheme.setSelected(true);
        darkTheme.setText("Koyu Tema");
        darkTheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darkThemeActionPerformed(evt);
            }
        });
        preferences.add(darkTheme);

        fileMenu.add(preferences);

        menuBar.add(fileMenu);

        addMenu.setText("Ekle");

        addDeviceMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        addDeviceMenuButton.setText("Cihaz Ekle");
        addDeviceMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeviceMenuButtonActionPerformed(evt);
            }
        });
        addMenu.add(addDeviceMenuButton);

        addCategoryMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        addCategoryMenuButton.setText("Kategori Ekle");
        addCategoryMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryMenuButtonActionPerformed(evt);
            }
        });
        addMenu.add(addCategoryMenuButton);

        addProfileMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        addProfileMenuButton.setText("Profil Ekle");
        addProfileMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProfileMenuButtonActionPerformed(evt);
            }
        });
        addMenu.add(addProfileMenuButton);

        createAccountMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        createAccountMenuButton.setText("Hesap Olu≈ütur");
        createAccountMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountMenuButtonActionPerformed(evt);
            }
        });
        addMenu.add(createAccountMenuButton);

        menuBar.add(addMenu);

        settings.setText("Ayarlar");
        settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsActionPerformed(evt);
            }
        });

        databaseSettings.setText("Veritabanƒ± Konfig√ºrasyonu");
        databaseSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databaseSettingsActionPerformed(evt);
            }
        });
        settings.add(databaseSettings);

        mainAdminMail.setText("Ana Admin Mail Adresi");
        mainAdminMail.setEnabled(false);
        mainAdminMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainAdminMailActionPerformed(evt);
            }
        });
        settings.add(mainAdminMail);

        menuBar.add(settings);

        about.setText("Yardƒ±m");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });

        aboutButton.setText("EYS Hakkƒ±nda");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });
        about.add(aboutButton);

        menuBar.add(about);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(753, 578));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**/
    CreateAccount caccount = new CreateAccount();
    Accounts accounts = new Accounts();
    UploadCSV ucsv = new UploadCSV();
    AddDevice adddevice = new AddDevice();
    AddCategory addcategory = new AddCategory();
    AddProfile addprofile = new AddProfile();
    LoginDatabase ldb = new LoginDatabase();
    DashboardDatabase sdb = new DashboardDatabase();
    Variables vary = new Variables();
    About aboutWindow = new About();
    String currentTab = "";
    String perm = Variables.perm;
    boolean mainadmin = false,
                admin = false;
    /**
     * This method exports the specified table's information as a CSV File, and it provides
     * a file chooser window for user to select the target location for the file will be created.
     * @param table This is the table that the information will be gathered.
     * @param filechooser This is the JFileChooser constructor to show file chooser window.
     * @param approve This parameter contains the value of approve choice from the file chooser.
     * @param cancel This parameter contains the value of cancel choice from the file chooser.
     * @param currentTab This parameter contains the name of current tab open which will be
     * used to decide the type of data will be exported.
     */
    private void exportTable(JTable table, JFileChooser filechooser, int approve, int cancel, String currentTab){
        /* The following initialisation creates a int array for the selected rows in the table */
        int[] rows = table.getSelectedRows();
        int answer = filechooser.showSaveDialog(null);
        if (answer == cancel) { //User commanded to cancel the process if answer equals to cancel variable
            return;
        }
                    
        /* Passing the location of target folder and name into path variable, then getting the extension written */
        String path = filechooser.getSelectedFile().getAbsolutePath();
        String[] extensions = ((FileNameExtensionFilter) filechooser.getFileFilter()).getExtensions();
        String extension = "."+extensions[0];
                    
        /* Looping until the user enters an extension and clicks the approve button,
        Showing a warning about the extension error to user if the condition is not met.*/
        while (answer == approve && !path.endsWith(extension)) { //
            if (answer == cancel) {
                return;
            }
            JOptionPane.showMessageDialog(null, "L√ºtfen "+extension+" uzantƒ±sƒ± ekleyiniz!", "Hata", 0);
            answer = filechooser.showSaveDialog(filechooser);
            path = filechooser.getSelectedFile().getAbsolutePath();
        }
        /* Looping until the user enters an existing file name and clicks the approve button*/
        while (answer == approve && filechooser.getSelectedFile().exists()) {
            if (answer == cancel) {
                return;
            }
            // Showing a choice dialog if the user wants to overwrite the file if the condition is not met.
            int n = JOptionPane.showOptionDialog(this, "Bu isime sahip bir dosya zaten bulunuyor. Bu dosyanƒ±n √ºzerine yazmak"
                    + " istediƒüinize emin misiniz?.", "Uyarƒ±", 0, 0, null, new String[]{"Evet", "Hayƒ±r"}, "Hayƒ±r");
            if (n == 1) { // Showing the filechooser window again, if the answer is not 0 `yes`.
                answer = filechooser.showSaveDialog(filechooser);
            } else if (n == 0) {
                            break;
            }
        }
            if (rows.length < 1) {
                if (answer == approve) { /* Switching between the tab names and exporting all the elements in the table of the 
                                            current tab, if user selects approve and the selected row count is 0 */
                    switch (currentTab) {
                        case "inventory":
                            sdb.exportInventory(path); // Exporting the all data from inventory table
                            break;
                        case "profiles":
                            sdb.exportProfiles(path); // Exporting the all data from profiles table
                            break;
                        case "categories":
                            sdb.exportCategories(path); // Exporting the all data from categories table
                            break;
                        default:
                            break;
                    }
                }
            } else {
                /* Finding the index of the column `ID` and then storing all the values in that column into a List of String values,
                if the selected row count is 1 or more*/
                int column = 0;
                for (int columnIndex = 0; columnIndex < table.getColumnCount(); columnIndex++) {
                    if (table.getColumnName(columnIndex).equals("ID")) {
                        column = columnIndex;
                    }
                }
                List<String> IDs = new ArrayList<>();
                for (int row : rows) {
                    String ID = (String) table.getValueAt(row, column);
                    IDs.add(ID);
                }
                if (answer == approve) { /* Switching between the tab names and exporting all the elements 
                                            in the table of the current tab, if user selects approve */
                    switch (currentTab) {
                        case "inventory":
                            sdb.exportDevices(path, IDs); // Exporting the selected rows' data from inventory table
                            break;
                        case "profiles":
                            sdb.exportSomeProfiles(path, IDs); // Exporting the selected rows' data from profiles table
                            break;
                        case "categories":
                            sdb.exportSomeCategories(path, IDs); // Exporting the selected rows' data from categories table
                            break;
                        default:
                            break;
                    }
                }
            }
    }
    
    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        
        /* The following lines of codes constructs the JFileChooser element on the filechooser object and set
        the default file name with extension, then the numerical value of approve and cancel selections are initialised.*/
        JFileChooser filechooser = new JFileChooser();
        filechooser.setFileSelectionMode(0);
        filechooser.setMultiSelectionEnabled(false);
        filechooser.setSelectedFile(new File("untitled.csv"));
        filechooser.addChoosableFileFilter(new FileNameExtensionFilter("CSV (Virg√ºlle ayrƒ±lmƒ±≈ü) (*.csv)", "csv"));
        filechooser.setAcceptAllFileFilterUsed(true);
        int cancel = JFileChooser.CANCEL_OPTION;
        int approve = JFileChooser.APPROVE_OPTION;
        switch (currentTab) { /* Switching between the tab names to call the sub-procedure to export table data
                                with the corresponding table object of current tab. */
            case "inventory":
                {
                    exportTable(inventoryTable, filechooser, approve, cancel, currentTab);
                    break;
                }
            case "profiles":
                {
                    exportTable(profilesTable, filechooser, approve, cancel, currentTab);
                    break;
                }
            case "categories":
                {
                    exportTable(categoriesTable, filechooser, approve, cancel, currentTab);
                    break;
                }
            default:
                break;
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    private void addDeviceMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDeviceMenuButtonActionPerformed
        // TODO add your handling code here:
        adddevice.setVisible(true);
    }//GEN-LAST:event_addDeviceMenuButtonActionPerformed

    private void addCategoryMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryMenuButtonActionPerformed
        // TODO add your handling code here:
        addcategory.setVisible(true);
    }//GEN-LAST:event_addCategoryMenuButtonActionPerformed

    private void addProfileMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProfileMenuButtonActionPerformed
        // TODO add your handling code here:
        addprofile.setVisible(true);
    }//GEN-LAST:event_addProfileMenuButtonActionPerformed

    private void createAccountMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountMenuButtonActionPerformed
        // TODO add your handling code here:
        caccount.setVisible(true);
    }//GEN-LAST:event_createAccountMenuButtonActionPerformed

    private void uploadCSVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadCSVButtonActionPerformed
        // TODO add your handling code here:
        ucsv.setVisible(true);
    }//GEN-LAST:event_uploadCSVButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        try ( FileReader reader = new FileReader(Variables.configProperties)) {
            Properties properties = new Properties();
            properties.load(reader);
            String appTheme = properties.getProperty("appTheme");
            if(appTheme.equals("dark"))
                darkTheme.setSelected(true);
            else
                darkTheme.setSelected(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
        UIManager.put("FileChooser.cancelButtonText", "ƒ∞ptal");
        UIManager.put("FileChooser.fileNameLabelText", "Dosya ƒ∞smi");
        UIManager.put("FileChooser.filesOfTypeLabelText", "Dosya Tipi");
        UIManager.put("FileChooser.saveDialogTitleText", "Kaydet");
        UIManager.put("FileChooser.saveButtonText", "Kaydet");
        UIManager.put("FileChooser.openDialogTitleText", "A√ß");
        UIManager.put("FileChooser.newFolderButtonText", "Yeni Dosya");
        UIManager.put("FileChooser.newFolderExistsErrorText", "Bu isimli bir dosya zaten mevcut.");
        UIManager.put("FileChooser.untitledFileName", "untitled");
        perm = Variables.perm;
        welcomeMessage.setText("Ho≈ügeldin " + Variables.uname);
        if(perm == null){
            uploadCSVButton.setEnabled(false);
            addMenu.setEnabled(false);
            mainadminallowedpanel.setVisible(false);
            adddevicepanel.setVisible(false);
        }else{
            switch (perm.toLowerCase()) {
                case "ana admin":
                    mainadmin = true;
                    admin = true;
                    mainadminallowedpanel.setVisible(true);
                    createAccountButton.setEnabled(true);
                    accountsButton.setEnabled(true);
                    adddevicepanel.setVisible(true);
                    createDeviceButton.setEnabled(true);
                    mainAdminMail.setEnabled(true);
                    break;
                case "admin":
                    admin = true;
                    mainadminallowedpanel.setVisible(false);
                    createAccountMenuButton.setEnabled(false);
                    adddevicepanel.setVisible(true);
                    createDeviceButton.setEnabled(true);
                    mainAdminMail.setEnabled(false);
                    break;
                default:
                    uploadCSVButton.setEnabled(false);
                    addMenu.setEnabled(false);
                    mainadminallowedpanel.setVisible(false);
                    adddevicepanel.setVisible(false);
                    mainAdminMail.setEnabled(false);
                    break;
            }
        }
        
        allTabs.setSelectedIndex(0);
        this.setSize(new Dimension(620, 530));
        panel.setPreferredSize(new Dimension(620, 530));
        this.setLocationRelativeTo(null);
        permissionText.setText("");
        createAccountButton.setVisible(mainadmin);
        accountsButton.setVisible(admin);
        adddevicepanel.setVisible(admin);
        noperm.setVisible(!admin);
        uploadCSVButton.setVisible(admin);
        addDeviceMenuButton.setVisible(admin);
        addCategoryMenuButton.setVisible(admin);
        addProfileMenuButton.setVisible(admin);
        createAccountMenuButton.setVisible(admin);
    }//GEN-LAST:event_formComponentShown

    private void exportButtonMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportButtonMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_exportButtonMouseDragged

    private void allTabsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_allTabsComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_allTabsComponentShown

    private void allTabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allTabsMouseClicked
        // TODO add your handling code here:
        //System.out.println(allTabs.getSelectedIndex());
    }//GEN-LAST:event_allTabsMouseClicked

    private void allTabsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_allTabsFocusGained
        // TODO add your handling code here:
        HashMap<Integer, String> map = new HashMap<>();
        map.put(0,"panel"); map.put(1,"account"); map.put(2,"inventory"); map.put(3,"profiles"); map.put(4,"addDevice"); map.put(5,"addDevice");
        int i = allTabs.getSelectedIndex();
        currentTab = map.get(i);
        //System.out.println(currentTab);
    }//GEN-LAST:event_allTabsFocusGained

    private void addDeviceTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_addDeviceTabComponentShown
        // TODO add your handling code here:
        this.setSize(new Dimension(755, 380));
        panel.setPreferredSize(new Dimension(735, 380));
        this.setLocationRelativeTo(null);
        //exportButton.setEnabled(false);
        currentTab = "adddevice";
        panel.revalidate();
        jLabel29.setVisible(false);
        newDeviceWarrantyType.setVisible(false);
        List<String[]> values = sdb.getCategoriesFull();
        newDeviceCategory.addItem(null);
        DefaultComboBoxModel category = (DefaultComboBoxModel) newDeviceCategory.getModel();
        for (String[] eachRow : values) {
            if(category.getIndexOf(eachRow[1]) == -1){
                category.addElement(eachRow[1]); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
            }
        }
    }//GEN-LAST:event_addDeviceTabComponentShown

    private void adddevicepanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_adddevicepanelComponentShown

    }//GEN-LAST:event_adddevicepanelComponentShown

    private void newDeviceWarrantyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_newDeviceWarrantyStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceWarrantyStateChanged

    private void newDeviceWarrantyDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceWarrantyDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceWarrantyDateActionPerformed

    private void newDeviceWarrantyTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceWarrantyTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceWarrantyTypeActionPerformed

    private void newDeviceWarrantyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceWarrantyCheckBoxActionPerformed
        if(newDeviceWarrantyCheckBox.isSelected()){
            newDeviceWarranty.setEnabled(true);
            newDeviceWarrantyType.setEnabled(true);
            newDeviceWarrantyType.setVisible(true);
            jLabel29.setVisible(true);
            newDeviceWarrantyDate.setEnabled(false);
            if(newDeviceWarrantyDateCheckBox.isSelected())
            newDeviceWarrantyDateCheckBox.doClick();
        }else{
            newDeviceWarranty.setValue(0);
            newDeviceWarranty.setEnabled(false);
            newDeviceWarrantyType.setEnabled(false);
            newDeviceWarrantyType.setVisible(false);
        }
    }//GEN-LAST:event_newDeviceWarrantyCheckBoxActionPerformed

    private void newDeviceWarrantyDateCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceWarrantyDateCheckBoxActionPerformed
        if(newDeviceWarrantyDateCheckBox.isSelected()){
            newDeviceWarrantyDate.setEnabled(true);
            newDeviceWarranty.setEnabled(false);
            newDeviceWarranty.setValue(0);
            newDeviceWarrantyType.setEnabled(false);
            newDeviceWarrantyType.setVisible(false);
            jLabel29.setVisible(false);
            if(newDeviceWarrantyCheckBox.isSelected())
            newDeviceWarrantyCheckBox.doClick();
        }else{
            newDeviceWarrantyDate.setEnabled(false);
        }
    }//GEN-LAST:event_newDeviceWarrantyDateCheckBoxActionPerformed

    private void createDeviceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDeviceButtonActionPerformed
        
        /* The following if conditions are checking the requirements for adding devices or to prevent any errors to occur */
        if(newDeviceWarrantyDateCheckBox.isSelected() && newDeviceWarrantyDate.getDate() == null){
            // Showing user a warning dialog to enter a device warranty date if the warranty date check box is selected and the value is null
            Dialogs.infoBox("Garanti biti≈ü tarihini giriniz!", "Eksik Bilgi");
            return;
        }
        if(newDeviceName.getText() == null || newDeviceName.getText().equals("")){
            // Showing user another warning dialog to enter a device name which is essential to differentiate the items and prevent errors
            Dialogs.infoBox("L√ºtfen cihaz ismi giriniz!", "Eksik Bilgi");
            return;
        }
        if (newDeviceCategory.getSelectedItem() == null) {
            // Showing user another warning dialog to select a category if the user does not select to prevent any errors
            Dialogs.infoBox("L√ºtfen bir kategori se√ßiniz!", "Eksik Bilgi");
            return;
        }
        
        /* Initialising each value in the text fields and combo box to save them as device credentials. */
        String deviceName = newDeviceName.getText(), category = newDeviceCategory.getSelectedItem().toString(),
                p1 = property1.getText(), p2 = property2.getText(), type = newDeviceWarrantyType.getSelectedItem().toString(),
                p3 = property3.getText(), p4 = property4.getText(), p5 = property5.getText(), p6 = property6.getText(),
                p7 = property7.getText(), p8 = property8.getText(), p9 = property9.getText(), p10 = property10.getText(),
                snum1 = newDeviceSerialNum1.getText(), snum2 = newDeviceSerialNum2.getText(), snum3 = newDeviceSerialNum3.getText(),
                snum4 = newDeviceSerialNum4.getText(), snum5 = newDeviceSerialNum5.getText(), snum6 = newDeviceSerialNum6.getText(),
                snum7 = newDeviceSerialNum7.getText(), snum8 = newDeviceSerialNum8.getText(), snum9 = newDeviceSerialNum9.getText(),
                snum10 = newDeviceSerialNum10.getText();
        int deviceNum = (Integer) newDeviceAmount.getValue(), warranty = (Integer) newDeviceWarranty.getValue();
        
        List<String> serialNums = new ArrayList<>(Arrays.asList(snum1, snum2, snum3, snum4, snum5, snum6, snum7, snum8, snum9, snum10));
        List<String> properties = new ArrayList<>(Arrays.asList(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10));
        
        if (deviceNum <= 0) { // Showing user an error dialog to warn him/her to enter a number of device to be registered
            Dialogs.infoBox("Cihaz adedi 1'den k√º√ß√ºk olamaz!", "Eksik Bilgi");
            return;
        }
        
        int x =0;
        for(String serialNum : serialNums){ // Calculating the number of the serial numbers with a for loop
            if(serialNum == null || serialNum.equals(""))
                x++;
        }
        
        if(10-x<deviceNum){ // Showing user an error dialog to warn him/her to enter serial numbers in specified number above. 
            Dialogs.infoBox("Belirtilen sayƒ±da seri numarasƒ± girilmedi!", "Eksik Bilgi");
            return;
        }
        
        /* Initialising the warranty date and converting it to LocalDate which is compatible with the database. */
        Date date = newDeviceWarrantyDate.getDate();
        LocalDate warrantyDate = newDeviceWarrantyDate.getDate() == null ? null: date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        /* Adding devices to database with the following sub-procedure with all the credentials for the device(s) to be stored. */
        sdb.addDevices(deviceName, category, warrantyDate, warranty, type, properties, serialNums);
    }//GEN-LAST:event_createDeviceButtonActionPerformed

    private void newDeviceSerialNum5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum5ActionPerformed

    private void newDeviceSerialNum10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum10ActionPerformed

    private void newDeviceSerialNum3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum3ActionPerformed

    private void newDeviceSerialNum4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum4ActionPerformed

    private void newDeviceSerialNum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum1ActionPerformed

    private void newDeviceSerialNum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum2ActionPerformed

    private void newDeviceSerialNum8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum8ActionPerformed

    private void newDeviceSerialNum9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum9ActionPerformed

    private void newDeviceSerialNum7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum7ActionPerformed

    private void newDeviceSerialNum6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceSerialNum6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceSerialNum6ActionPerformed

    private void newDeviceAmountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_newDeviceAmountStateChanged
        int a = (Integer) newDeviceAmount.getValue();
        boolean p1, p2, p3, p4, p5, p6, p7, p8, p9, p10;
        switch (a) {
            case 0:
            p1=false;
            p2=false;
            p3=false;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 1:
            p1=true;
            p2=false;
            p3=false;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 2:
            p1=true;
            p2=true;
            p3=false;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 3:
            p1=true;
            p2=true;
            p3=true;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 4:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 5:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 6:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 7:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=true;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 8:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=true;
            p8=true;
            p9=false;
            p10=false;
            break;
            case 9:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=true;
            p8=true;
            p9=true;
            p10=false;
            break;
            case 10:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=true;
            p8=true;
            p9=true;
            p10=true;
            break;
            default:
            p1=false;
            p2=false;
            p3=false;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
        }
        newDeviceSerialNum1.setEnabled(p1);newDeviceSerialNum2.setEnabled(p2);newDeviceSerialNum3.setEnabled(p3);newDeviceSerialNum4.setEnabled(p4);newDeviceSerialNum5.setEnabled(p5);
        newDeviceSerialNum6.setEnabled(p6);newDeviceSerialNum7.setEnabled(p7);newDeviceSerialNum8.setEnabled(p8);newDeviceSerialNum9.setEnabled(p9);newDeviceSerialNum10.setEnabled(p10);
    }//GEN-LAST:event_newDeviceAmountStateChanged

    private void property10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property10ActionPerformed

    private void property5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property5ActionPerformed

    private void property4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property4ActionPerformed

    private void property3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property3ActionPerformed

    private void property9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property9ActionPerformed

    private void property8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property8ActionPerformed

    private void property7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property7ActionPerformed

    private void property6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property6ActionPerformed

    private void property2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property2ActionPerformed

    private void property1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_property1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_property1ActionPerformed

    private void newDeviceNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDeviceNameActionPerformed

    private void newDeviceCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDeviceCategoryActionPerformed
        if(newDeviceCategory.getSelectedItem()==null) return;
        String selected = newDeviceCategory.getSelectedItem().toString();
        List<String[]> values = sdb.getCategorybyName(selected);
        boolean p1, p2, p3, p4, p5, p6, p7, p8, p9, p10;
        int b = Integer.valueOf(values.get(0)[2]);
        switch (b) {
            case 0:
            p1=false;
            p2=false;
            p3=false;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 1:
            p1=true;
            p2=false;
            p3=false;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 2:
            p1=true;
            p2=true;
            p3=false;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 3:
            p1=true;
            p2=true;
            p3=true;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 4:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 5:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 6:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 7:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=true;
            p8=false;
            p9=false;
            p10=false;
            break;
            case 8:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=true;
            p8=true;
            p9=false;
            p10=false;
            break;
            case 9:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=true;
            p8=true;
            p9=true;
            p10=false;
            break;
            case 10:
            p1=true;
            p2=true;
            p3=true;
            p4=true;
            p5=true;
            p6=true;
            p7=true;
            p8=true;
            p9=true;
            p10=true;
            break;
            default:
            p1=false;
            p2=false;
            p3=false;
            p4=false;
            p5=false;
            p6=false;
            p7=false;
            p8=false;
            p9=false;
            p10=false;
            break;
        }
        property1.setEnabled(p1);property2.setEnabled(p2);property3.setEnabled(p3);property4.setEnabled(p4);property5.setEnabled(p5);
        property6.setEnabled(p6);property7.setEnabled(p7);property8.setEnabled(p8);property9.setEnabled(p9);property10.setEnabled(p10);
        if(values.size()<=1) return;
        property1.setToolTipText(values.get(1)[0]);property2.setToolTipText(values.get(1)[1]);property3.setToolTipText(values.get(1)[2]);property4.setToolTipText(values.get(1)[3]);
        property5.setToolTipText(values.get(1)[4]);property6.setToolTipText(values.get(1)[5]);property7.setToolTipText(values.get(1)[6]);property8.setToolTipText(values.get(1)[7]);
        property9.setToolTipText(values.get(1)[8]);property10.setToolTipText(values.get(1)[9]);
    }//GEN-LAST:event_newDeviceCategoryActionPerformed

    private void categoryTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_categoryTabComponentShown
        // TODO add your handling code here:
        //this.setSize(new Dimension(705, 525));
        //panel.setPreferredSize(new Dimension(685, 525));
        this.setSize(new Dimension(745, 560));
        panel.setPreferredSize(new Dimension(725, 560));
        this.setLocationRelativeTo(null);
        exportButton.setEnabled(true);
        currentTab = "categories";
        panel.revalidate();
        List<String[]> values = sdb.getCategoriesFull();
        DefaultTableModel model=(DefaultTableModel) categoriesTable.getModel(); //tablo nesnemizi obje haline getiriyoruz.
        model.setRowCount(0); //veri listelenmeden √∂nce ba≈ülangƒ±√ß satƒ±rƒ±nƒ±n sƒ±fƒ±r yapƒ±yor.
        values.forEach(eachRow -> {
            model.addRow(eachRow); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
        });
        String text = "T√ºm√ºn√º Se√ß";
        categoriesPropertyNumberComboBox.removeAllItems();
        categoriesPropertyNumberComboBox.addItem(text);
        DefaultComboBoxModel propertyNumber = (DefaultComboBoxModel) categoriesPropertyNumberComboBox.getModel();
        for (String[] eachRow : values) {
            if(propertyNumber.getIndexOf(eachRow[2]) == -1){
                propertyNumber.addElement(eachRow[2]); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
            }
        }
    }//GEN-LAST:event_categoryTabComponentShown

    private void categoriesTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriesTableMouseReleased
        if(!perm.toLowerCase().equals("ana admin") && !perm.toLowerCase().equals("admin")) return;
        if(evt.getClickCount() == 2){
            int row = categoriesTable.getSelectedRow();
            int column = 0;
            for (int columnIndex = 0; columnIndex < categoriesTable.getColumnCount(); columnIndex++) {
                if (categoriesTable.getColumnName(columnIndex).equals("ID")) {
                    column=columnIndex;
                }
            }
            String ID = (String) categoriesTable.getValueAt(row, column);
            CategoryProperties cp = new CategoryProperties(ID);
            cp.setVisible(true);
        }
    }//GEN-LAST:event_categoriesTableMouseReleased

    private void categoriesSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesSearchButtonActionPerformed
        String searchTerm = categoriesSearchBar.getText(), propertyNumber = categoriesPropertyNumberComboBox.getSelectedItem().toString();
        //List<String[]> values = sdb.getInventory(searchTerm!=null?null:searchTerm, category!=null?null:category, device!=null?null:device, status!=null?null:status, assignedProfile!=null?null:assignedProfile, warranty!=null?null:warranty, remainingWarranty!=null?null:remainingWarranty);
        List<String[]> values = sdb.getCategories(searchTerm, propertyNumber);
        DefaultTableModel model=(DefaultTableModel) categoriesTable.getModel(); //tablo nesnemizi obje haline getiriyoruz.
        model.setRowCount(0); //veri listelenmeden √∂nce ba≈ülangƒ±√ß satƒ±rƒ±nƒ±n sƒ±fƒ±r yapƒ±yor.
        values.forEach(eachRow -> {
            model.addRow(eachRow); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
        });
    }//GEN-LAST:event_categoriesSearchButtonActionPerformed

    private void profilesTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_profilesTabComponentShown

        // Updating the settings of the pane according to the tab opened.
        this.setSize(new Dimension(745, 560));
        panel.setPreferredSize(new Dimension(725, 560));
        this.setLocationRelativeTo(null);
        exportButton.setEnabled(true);
        currentTab = "profiles";
        panel.revalidate();
        
        List<String[]> values = sdb.getProfilesFull();
        DefaultTableModel model=(DefaultTableModel) profilesTable.getModel(); //tablo nesnemizi obje haline getiriyoruz.
        model.setRowCount(0); //veri listelenmeden √∂nce ba≈ülangƒ±√ß satƒ±rƒ±nƒ±n sƒ±fƒ±r yapƒ±yor.
        values.forEach(eachRow -> {
            model.addRow(eachRow); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
        });
        String text = "T√ºm√ºn√º Se√ß";
        profileStatusComboBox.removeAllItems();
        profileStatusComboBox.addItem(text);
        DefaultComboBoxModel status = (DefaultComboBoxModel) profileStatusComboBox.getModel();
        for (String[] eachRow : values) {
            if(status.getIndexOf(eachRow[3]) == -1){
                status.addElement(eachRow[3]); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
            }
        }
        
    }//GEN-LAST:event_profilesTabComponentShown

    private void profilesTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilesTableMouseReleased
        if(!perm.toLowerCase().equals("ana admin") && !perm.toLowerCase().equals("admin")) return;
        if(evt.getClickCount() == 2){
            int row = profilesTable.getSelectedRow();
            int column = 0;
            for (int columnIndex = 0; columnIndex < profilesTable.getColumnCount(); columnIndex++) {
                if (profilesTable.getColumnName(columnIndex).equals("ID")) {
                    column=columnIndex;
                }
            }
            String ID = (String) profilesTable.getValueAt(row, column);
            ProfileProperties profileProperties = new ProfileProperties(ID);
            profileProperties.setVisible(true);
        }
    }//GEN-LAST:event_profilesTableMouseReleased

    private void profileSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileSearchButtonActionPerformed
        String searchTerm = profileSearchBar.getText(), status = profileStatusComboBox.getSelectedItem().toString();
        List<String[]> values = sdb.getProfiles(searchTerm, status);
        DefaultTableModel model=(DefaultTableModel) profilesTable.getModel(); 
        model.setRowCount(0); 
        values.forEach(eachRow -> {
            model.addRow(eachRow); 
        });
    }//GEN-LAST:event_profileSearchButtonActionPerformed

    private void inventoryTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_inventoryTabComponentShown
        this.setSize(new Dimension(745, 560));
        panel.setPreferredSize(new Dimension(725, 560));
        this.setLocationRelativeTo(null);
        exportButton.setEnabled(true);
        currentTab = "inventory";
        panel.revalidate();
        List<String[]> values = sdb.getInventoryFull();
        DefaultTableModel model=(DefaultTableModel) inventoryTable.getModel(); 
        model.setRowCount(0); 
        values.forEach(eachRow -> {
            model.addRow(eachRow);
        });
        String text = "T√ºm√ºn√º Se√ß";

        categoryComboBox.removeAllItems();
        categoryComboBox.addItem(text);
        DefaultComboBoxModel category = (DefaultComboBoxModel) categoryComboBox.getModel();
        for (String[] eachRow : values) {
            String value = eachRow[1];
            if(category.getIndexOf(eachRow[1]) == -1 && value!=null && !value.equals("")){
                category.addElement(eachRow[1]); 
            }
        }
        deviceComboBox.removeAllItems();
        deviceComboBox.addItem(text);
        DefaultComboBoxModel device = (DefaultComboBoxModel) deviceComboBox.getModel();
        for (String[] eachRow : values) {
            String value = eachRow[2];
            if(device.getIndexOf(eachRow[2]) == -1 && value!=null && !value.equals("")){
                device.addElement(eachRow[2]); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
            }
        }
        inventoryStatusComboBox.removeAllItems();
        inventoryStatusComboBox.addItem(text);
        DefaultComboBoxModel status = (DefaultComboBoxModel) inventoryStatusComboBox.getModel();
        for (String[] eachRow : values) {
            String value = eachRow[3];
            if(status.getIndexOf(eachRow[3]) == -1 && value!=null && !value.equals("")){
                status.addElement(eachRow[3]); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
            }
        }
        assignedProfileComboBox.removeAllItems();
        assignedProfileComboBox.addItem(text);
        DefaultComboBoxModel assignedProfile = (DefaultComboBoxModel) assignedProfileComboBox.getModel();
        for (String[] eachRow : values) {
            String value = eachRow[4];
            if(assignedProfile.getIndexOf(value) == -1 && value!=null && !value.equals("")){
                assignedProfile.addElement(value); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
            }
        }
        warrantyComboBox.removeAllItems();
        warrantyComboBox.addItem(text);
        DefaultComboBoxModel warranty = (DefaultComboBoxModel) warrantyComboBox.getModel();
        for (String[] eachRow : values) {
            String value = eachRow[5];
            if(warranty.getIndexOf(eachRow[5]) == -1 && value!=null && !value.equals("")){
                warranty.addElement(eachRow[5]); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
            }
        }
        remainingWarrantyComboBox.removeAllItems();
        remainingWarrantyComboBox.addItem(text);
        DefaultComboBoxModel remainingWarranty = (DefaultComboBoxModel) remainingWarrantyComboBox.getModel();
        for (String[] eachRow : values) {
            String value = eachRow[6];
            if(remainingWarranty.getIndexOf(eachRow[6]) == -1 && value!=null && !value.equals("")){
                remainingWarranty.addElement(eachRow[6]); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
            }
        }
    }//GEN-LAST:event_inventoryTabComponentShown

    private void inventoryTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryTableMouseReleased
        if(!perm.toLowerCase().equals("ana admin") && !perm.toLowerCase().equals("admin")) return;
        if(evt.getClickCount() == 2){
            int row = inventoryTable.getSelectedRow();
            int column = 0;
            for (int columnIndex = 0; columnIndex < inventoryTable.getColumnCount(); columnIndex++) {
                if (inventoryTable.getColumnName(columnIndex).equals("ID")) {
                    column=columnIndex;
                }
            }
            String ID = (String) inventoryTable.getValueAt(row, column);
            DeviceProperties deviceProperties = new DeviceProperties(ID);
            deviceProperties.setVisible(true);
        }
    }//GEN-LAST:event_inventoryTableMouseReleased

    private void inventorySearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventorySearchButtonActionPerformed
        // TODO add your handling code here:
        String searchTerm = inventorySearchBar.getText(), category = categoryComboBox.getSelectedItem().toString(),
        device = deviceComboBox.getSelectedItem().toString(), status = inventoryStatusComboBox.getSelectedItem().toString(),
        assignedProfile = assignedProfileComboBox.getSelectedItem().toString(), warranty = warrantyComboBox.getSelectedItem().toString(),
        remainingWarranty = remainingWarrantyComboBox.getSelectedItem().toString();
        System.out.println(category);
        List<String[]> values = sdb.getInventory(searchTerm, category, device, status, assignedProfile, warranty, remainingWarranty);
        DefaultTableModel model=(DefaultTableModel) inventoryTable.getModel(); 
        model.setRowCount(0); 
        values.forEach(eachRow -> {
            model.addRow(eachRow);
        });
    }//GEN-LAST:event_inventorySearchButtonActionPerformed

    private void accountTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_accountTabComponentShown
        // TODO add your handling code here:
        this.setSize(new Dimension(620, 300));
        panel.setPreferredSize(new Dimension(620, 300));
        this.setLocationRelativeTo(null);
        currentTab = "account";
        panel.revalidate();
        nicknameField.setText(Variables.uname);
        passwordField.setText("");
        repasswordField.setText("");
        oldPasswordField.setText("");
        permissionText.setText(Variables.perm);
        createdDateText.setText(Variables.dateofcreation);
    }//GEN-LAST:event_accountTabComponentShown

    private void accountsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountsButtonActionPerformed
        // TODO add your handling code here:
        accounts.setVisible(true);
    }//GEN-LAST:event_accountsButtonActionPerformed

    private void createAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountButtonActionPerformed
        // TODO add your handling code here:
        caccount.setVisible(true);
    }//GEN-LAST:event_createAccountButtonActionPerformed

    private void passwordshowhideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordshowhideActionPerformed
        // TODO add your handling code here:
        if(passwordshowhide.isSelected()){
            passwordField.setEchoChar((char)0);
            repasswordField.setEchoChar((char)0);
        }else{
            passwordField.setEchoChar('\u2022');
            repasswordField.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_passwordshowhideActionPerformed

    private void oldpasswordshowhideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldpasswordshowhideActionPerformed
        // TODO add your handling code here:
        if(oldpasswordshowhide.isSelected()){
            oldPasswordField.setEchoChar((char)0);
        }else{
            oldPasswordField.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_oldpasswordshowhideActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String nickname = nicknameField.getText(), password = passwordField.getText(), repassword = repasswordField.getText(), oldpassword = oldPasswordField.getText();
        if(!password.equals(repassword)){
            Dialogs.infoBox("Yeni ≈üifre ile tekrar edilen yeni ≈üifre uyu≈ümuyor!", "Uyumsuz ≈ûifre!");
            return;
        }
        sdb.updateAccount(nickname, password, oldpassword);
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void nicknameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicknameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nicknameFieldActionPerformed

    private void panelTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelTabComponentShown
        this.setSize(new Dimension(620, 530));
        panel.setPreferredSize(new Dimension(620, 530));
        this.setLocationRelativeTo(null);
        //exportButton.setEnabled(false);
        currentTab = "panel";
        panel.revalidate();
        welcomeMessage.setText("Ho≈ügeldin "+Variables.uname);
    }//GEN-LAST:event_panelTabComponentShown

    private void devicesLogTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_devicesLogTabComponentShown
        this.setSize(new Dimension(745, 560));
        panel.setPreferredSize(new Dimension(725, 560));
        this.setLocationRelativeTo(null);
        exportButton.setEnabled(true);
        currentTab = "devicesLogPanel";
        panel.revalidate();
        List<String[]> values = sdb.getDevicesLog();
        DefaultTableModel model=(DefaultTableModel) devicesLogTable.getModel(); //tablo nesnemizi obje haline getiriyoruz.
        model.setRowCount(0); //veri listelenmeden √∂nce ba≈ülangƒ±√ß satƒ±rƒ±nƒ±n sƒ±fƒ±r yapƒ±yor.
        values.forEach(eachRow -> {
            model.addRow(eachRow); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
        });
    }//GEN-LAST:event_devicesLogTabComponentShown

    private void profileLogTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_profileLogTabComponentShown
        this.setSize(new Dimension(745, 560));
        panel.setPreferredSize(new Dimension(725, 560));
        this.setLocationRelativeTo(null);
        exportButton.setEnabled(true);
        currentTab = "profileLogPanel";
        panel.revalidate();
        List<String[]> values = sdb.getProfilesLog();
        DefaultTableModel model=(DefaultTableModel) profilesLogTable.getModel(); //tablo nesnemizi obje haline getiriyoruz.
        model.setRowCount(0); //veri listelenmeden √∂nce ba≈ülangƒ±√ß satƒ±rƒ±nƒ±n sƒ±fƒ±r yapƒ±yor.
        values.forEach(eachRow -> {
            model.addRow(eachRow); //obje haline gelen tablomuza metod yardƒ±mƒ±yla verileri while d√∂ng√ºs√º i√ßerisinde satƒ±r satƒ±r ekliyoruz.
        });
    }//GEN-LAST:event_profileLogTabComponentShown

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        
    }//GEN-LAST:event_aboutActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        aboutWindow.setVisible(true);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void darkThemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_darkThemeActionPerformed
        String appTheme = "light";
        
            
            FileInputStream in = null;
            try {
                in = new FileInputStream(Variables.configProperties);
                Properties properties = new Properties();
                properties.load(in);
                in.close();
                FileOutputStream out = new FileOutputStream(Variables.configProperties);
                
                if(darkTheme.isSelected())
                    appTheme = "dark";
                properties.setProperty("appTheme", appTheme);
                properties.store(out, null);
                out.close();
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    in.close();
                } catch (IOException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            JOptionPane.showMessageDialog(this, "Tercihlerin uygulanmasƒ± i√ßin uygulamayƒ± kapatƒ±p a√ßƒ±nƒ±z!", "Uyarƒ±", 0);
        
    }//GEN-LAST:event_darkThemeActionPerformed

    private void profilesTabComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_profilesTabComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_profilesTabComponentResized

    private void databaseSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_databaseSettingsActionPerformed
        DatabaseProperties dbprops = new DatabaseProperties(this);
        dbprops.setVisible(true);
    }//GEN-LAST:event_databaseSettingsActionPerformed

    private void settingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingsActionPerformed

    private void mainAdminMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainAdminMailActionPerformed
        ReceiverAddress receiver = new ReceiverAddress();
        if(Variables.perm.equals("Ana Admin"))
        receiver.setVisible(true);
    }//GEN-LAST:event_mainAdminMailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String appTheme = "";
                try ( FileReader reader = new FileReader(Variables.configProperties)) {
                    Properties properties = new Properties();
                    properties.load(reader);
                    appTheme = properties.getProperty("appTheme");
                } catch (Exception e) {
                    System.out.println(e);
                }
                try{
                    UIManager.setLookAndFeel(appTheme.equals("light") ? new FlatLightLaf() : appTheme.equals("dark") ? new FlatDarkLaf() : new FlatLightLaf());
                }catch(UnsupportedLookAndFeelException e){
                    System.out.println(e);
                }
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu about;
    private javax.swing.JMenuItem aboutButton;
    private javax.swing.JPanel accountTab;
    private javax.swing.JButton accountsButton;
    private javax.swing.JMenuItem addCategoryMenuButton;
    private javax.swing.JMenuItem addDeviceMenuButton;
    private javax.swing.JPanel addDeviceTab;
    private javax.swing.JMenu addMenu;
    private javax.swing.JMenuItem addProfileMenuButton;
    private javax.swing.JPanel adddevicepanel;
    private javax.swing.JTabbedPane allTabs;
    private javax.swing.JComboBox<String> assignedProfileComboBox;
    private com.toedter.calendar.JCalendar calendar;
    private javax.swing.JComboBox<String> categoriesPropertyNumberComboBox;
    private javax.swing.JTextField categoriesSearchBar;
    private javax.swing.JButton categoriesSearchButton;
    private javax.swing.JTable categoriesTable;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JPanel categoryTab;
    private javax.swing.JButton createAccountButton;
    private javax.swing.JMenuItem createAccountMenuButton;
    private javax.swing.JButton createDeviceButton;
    private javax.swing.JLabel createdDateText;
    private javax.swing.JCheckBoxMenuItem darkTheme;
    private javax.swing.JMenuItem databaseSettings;
    private javax.swing.JComboBox<String> deviceComboBox;
    private javax.swing.JPanel devicesLogTab;
    private javax.swing.JTable devicesLogTable;
    private javax.swing.JMenuItem exportButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextField inventorySearchBar;
    private javax.swing.JButton inventorySearchButton;
    private javax.swing.JComboBox<String> inventoryStatusComboBox;
    private javax.swing.JPanel inventoryTab;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem mainAdminMail;
    private javax.swing.JPanel mainadminallowedpanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JSpinner newDeviceAmount;
    private javax.swing.JComboBox<String> newDeviceCategory;
    private javax.swing.JTextField newDeviceName;
    private javax.swing.JTextField newDeviceSerialNum1;
    private javax.swing.JTextField newDeviceSerialNum10;
    private javax.swing.JTextField newDeviceSerialNum2;
    private javax.swing.JTextField newDeviceSerialNum3;
    private javax.swing.JTextField newDeviceSerialNum4;
    private javax.swing.JTextField newDeviceSerialNum5;
    private javax.swing.JTextField newDeviceSerialNum6;
    private javax.swing.JTextField newDeviceSerialNum7;
    private javax.swing.JTextField newDeviceSerialNum8;
    private javax.swing.JTextField newDeviceSerialNum9;
    private javax.swing.JSpinner newDeviceWarranty;
    private javax.swing.JCheckBox newDeviceWarrantyCheckBox;
    private org.jdesktop.swingx.JXDatePicker newDeviceWarrantyDate;
    private javax.swing.JCheckBox newDeviceWarrantyDateCheckBox;
    private javax.swing.JComboBox<String> newDeviceWarrantyType;
    private javax.swing.JTextField nicknameField;
    private javax.swing.JLabel noperm;
    private javax.swing.JPasswordField oldPasswordField;
    private javax.swing.JRadioButton oldpasswordshowhide;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelTab;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JRadioButton passwordshowhide;
    private javax.swing.JLabel permissionText;
    private javax.swing.JMenu preferences;
    private javax.swing.JPanel profileLogTab;
    private javax.swing.JTextField profileSearchBar;
    private javax.swing.JButton profileSearchButton;
    private javax.swing.JComboBox<String> profileStatusComboBox;
    private javax.swing.JTable profilesLogTable;
    private javax.swing.JPanel profilesTab;
    private javax.swing.JTable profilesTable;
    private javax.swing.JTextField property1;
    private javax.swing.JTextField property10;
    private javax.swing.JTextField property2;
    private javax.swing.JTextField property3;
    private javax.swing.JTextField property4;
    private javax.swing.JTextField property5;
    private javax.swing.JTextField property6;
    private javax.swing.JTextField property7;
    private javax.swing.JTextField property8;
    private javax.swing.JTextField property9;
    private javax.swing.JComboBox<String> remainingWarrantyComboBox;
    private javax.swing.JPasswordField repasswordField;
    private javax.swing.JMenu settings;
    private javax.swing.JButton updateButton;
    private javax.swing.JMenuItem uploadCSVButton;
    private javax.swing.JComboBox<String> warrantyComboBox;
    private javax.swing.JLabel welcomeMessage;
    // End of variables declaration//GEN-END:variables
}
