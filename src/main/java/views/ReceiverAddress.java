
package views;

import config.Dialogs;
import config.Mail;
import config.Variables;
import database.ReceiverAddressDatabase;
import java.awt.Image;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author NUN
 */
public class ReceiverAddress extends javax.swing.JFrame {

    /**
     * Creates new form MainAdminMailAddress
     */
    public ReceiverAddress() {
        initComponents();
        Image icon = Variables.icon;
        this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        mailAddress = new javax.swing.JTextField();

        setTitle("Doğrulama Mail Adresi");
        setResizable(false);

        jLabel1.setText("Doğrulama Mail Adresi:");

        save.setText("Kaydet");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save)
                    .addComponent(mailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(save)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void getConfirmation(String code, String email, String newMailAddress) {
        ReceiverAddressDatabase RADB = new ReceiverAddressDatabase();
        String result = (String) JOptionPane.showInputDialog(
                this,
                email + " mailinize gelen doğrulama kodunu giriniz.",
                "Doğrulama",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                ""
        );
        if (!result.equals(code)) {
            if (result == null) {
                return;
            }
            Dialogs.errorBox("Geçersiz kod!", "Hata!");
            getConfirmation(code, email, newMailAddress);
        } else {
            boolean check = RADB.setAddress(newMailAddress);
            if(check){
                Dialogs.infoBox("Doğrulama mail adresi güncellendi!", "");
            }else{
                Dialogs.errorBox("İşlem başarısız! Lütfen tekrar deneyiniz.", "Hata!");
            }
        }
    }
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        Mail mail = new Mail();
        ReceiverAddressDatabase RADB = new ReceiverAddressDatabase();
        try {
            String newMailAddress = mailAddress.getText();
            if(newMailAddress == null && !newMailAddress.contains("@") || !newMailAddress.contains(".")){
                Dialogs.errorBox("Lütfen düzgün bir mail adresi belirtiniz!", "Hata!");
                return;
            }
            int number = new Random().nextInt(999999);
            String code = String.format("%06d", number);
            String email = RADB.getAddress();
            if(email == null){
                Dialogs.errorBox("Veritabanına kayıtlı bir mail bulunamadı, bu sebeple otomatik kayıt yapılamıyor.\nLütfen veritabanına el ile yeni bir mail adresi kaydediniz.", "Hata!");
                return;
            }
            String result = mail.sendEmail(email, "Doğrulama Mail Adresi Değiştirme - Doğrulama Kodu", "Eğer bu işemden haberiniz yoksa lütfen bu maili dikkate almayınız ve uygulamanın Ana Admin olarak giriş yapıldığı cihazları kontrol ediniz.\nDoğrulama kodunuz:\n" + code);
            if (result.equals("connection error")) {
                Dialogs.errorBox("Mail bağlantısında bir sorun oluştu! Lütfen internet bağlantınızı kontrol ediniz.", "Bağlantı Hatası");
                return;
            } else if (result.equals("error")) {
                Dialogs.errorBox("Mail gönderilirken bir sorun oluştu! Lütfen daha sonra tekrar deneyiniz.", "Hata");
                return;
            }
            getConfirmation(code, email, newMailAddress);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReceiverAddress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReceiverAddress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReceiverAddress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReceiverAddress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReceiverAddress().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField mailAddress;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
