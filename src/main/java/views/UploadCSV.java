
package views;

import com.formdev.flatlaf.FlatLightLaf;
import config.Dialogs;
import config.Variables;
import database.*;
import java.awt.Image;
import java.io.*;
import java.nio.charset.Charset;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author NUN
 */
public class UploadCSV extends javax.swing.JFrame {

    /**
     * Creates new form UploadCSV
     */
    public UploadCSV() {
        initComponents();
        Image icon = Variables.icon;
        this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uploadButton = new javax.swing.JButton();

        setTitle("CSV Yükle");
        setResizable(false);

        uploadButton.setText("Yüklemek için dosya seçiniz");
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(uploadButton)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(uploadButton)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    DashboardDatabase sd = new DashboardDatabase();
    UploadCSVDatabase ucsvd = new UploadCSVDatabase();
    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        int a = JOptionPane.showOptionDialog(this, "Cihaz mı yoksa profil mi yükleyeceksiniz?", "Uyarı", 0, 0, null, new String[]{"Cihaz", "Profil"}, "Profil");
        String filetype = "";
        if (a == 1) {
            filetype = "profil";
        } else if (a == 0) {
            filetype = "cihaz";
        }

        JFileChooser filechooser = new JFileChooser();
        filechooser.setFileSelectionMode(0);
        filechooser.setMultiSelectionEnabled(false);
        filechooser.addChoosableFileFilter(new FileNameExtensionFilter("CSV (Virgülle ayrılmış) (*.csv)", "csv"));
        filechooser.setAcceptAllFileFilterUsed(true);
        int cancel = JFileChooser.CANCEL_OPTION;
        int approve = JFileChooser.APPROVE_OPTION;

        int answer = filechooser.showOpenDialog(null);
        if (answer == cancel) {
            return;
        }
        String path = filechooser.getSelectedFile().getAbsolutePath();
        if (answer == approve && !path.toLowerCase().endsWith(".csv")) {
            Dialogs.errorBox("Seçtiğiniz dosya CSV dosyası değil!", "Uyumsuz Dosya");
            return;
        }
        if (!filechooser.getSelectedFile().exists()) {
            Dialogs.errorBox("Dosya bulunamadı!", "Hata");
            return;
        }
        File CSVFile = new File(path);

        int categoryindex = -1, devicenameindex = -1, devicestatusindex = -1, warrantydateindex = -1, serialnumindex = -1;
        int profilenameindex = -1, profilesurnameindex = -1, profilestatusindex = -1, identitynumberindex = -1, dutyindex = -1;
        List<List<String>> records = new ArrayList<>();
        try ( BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(CSVFile), Charset.forName("ISO-8859-9")))) {
            String line;
            int count = 0;
            while ((line = br.readLine()) != null) {
                if(line.isEmpty()) continue;
                count++;
                if(line.endsWith(",")){
                    line += "--";
                }
                String[] values = line.split(",");
                if (count == 1) {
                    if (filetype.equals("profil")) {
                        int c = 0;
                        for(String value : values){
                            if(value.contains(".xml")){
                                Dialogs.errorBox("Bu dosya hatalı ya da bozuk olabilir.", "Uyarı");
                            }
                            switch (value.toLowerCase(Locale.forLanguageTag("TR"))) {
                                case "isim":
                                    profilenameindex = c;
                                    break;
                                case "durum":
                                    profilestatusindex = c;
                                    break;
                                case "soyisim":
                                    profilesurnameindex = c;
                                    break;
                                case "telefon numarası":
                                    identitynumberindex = c;
                                    break;
                                case "görev":
                                    dutyindex = c;
                                    break;
                                default:
                                    break;
                            }
                            c++;
                        }
                        if(profilenameindex==-1 || profilestatusindex==-1 || profilesurnameindex==-1 || identitynumberindex==-1 || dutyindex==-1 ){
                            Dialogs.errorBox("Lütfen CSV dosyasının başlıklarından emin olunuz!\nBaşlıklar: İsim, Soyisim, Durum, Kimlik Numarası, Görev", "Hata");
                            return;
                        }
                    }
                    else if (filetype.equals("cihaz")) {
                        int c = 0;
                        for(String value : values){
                            switch (value.toLowerCase(Locale.forLanguageTag("TR"))) {
                                case "kategori":
                                    categoryindex = c;
                                    break;
                                case "isim":
                                    devicenameindex = c;
                                    break;
                                case "durum":
                                    devicestatusindex = c;
                                    break;
                                case "garanti bitiş tarihi":
                                    warrantydateindex = c;
                                    break;
                                case "seri numarası":
                                    serialnumindex = c;
                                    break;
                                default:
                                    break;
                            }
                            c++;
                        }
                        if(categoryindex==-1||devicenameindex==-1||devicestatusindex==-1||warrantydateindex==-1 ||serialnumindex==-1){
                            Dialogs.errorBox("Lütfen CSV dosyasının başlıklarından emin olunuz!\nBaşlıklar: Kategori, İsim, Durum, Atanan Profil, Garanti Bitiş Tarihi, Seri Numarası", "Hata");
                            return;
                        }
                    }
                }else{
                    records.add(Arrays.asList(values));
                }
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UploadCSV.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UploadCSV.class.getName()).log(Level.SEVERE, null, ex);
        }
        int n = JOptionPane.showOptionDialog(this, "Seçtiğiniz dosyada garanti bitiş tarihinin yyyy-aa-gg ya da yyyy/aa/gg formatında olduğuna emin misiniz", "Uyarı", 0, 0, null, new String[]{"Evet", "Hayır"}, "Hayır");
        if (n == 1) {
            return;
        }
        
        if(filetype.equals("cihaz"))
            ucsvd.addDevices(records, categoryindex, devicenameindex, devicestatusindex, warrantydateindex, serialnumindex);    
        else if(filetype.equals("profil"))
            ucsvd.addProfiles(records, profilenameindex, profilestatusindex, profilesurnameindex, identitynumberindex, dutyindex);
    }//GEN-LAST:event_uploadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadCSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadCSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadCSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadCSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e) {

        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UploadCSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
